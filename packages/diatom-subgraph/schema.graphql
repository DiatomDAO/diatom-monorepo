type Whale @entity {
  "The Whale's ERC721 token id"
  id: ID!

  "The owner of the Whale"
  owner: Account!
}

type Bid @entity {
  "Bid transaction hash"
  id: ID!

  "The Whale being bid on"
  whale: Whale!

  "Bid amount"
  amount: BigInt!

  "Bidder account"
  bidder: Account

  "Block number of the bid"
  blockNumber: BigInt!

  "Index of transaction within block"
  txIndex: BigInt!

  "The auction being bid in"
  auction: Auction!

  "The timestamp of the block the bid is in"
  blockTimestamp: BigInt!
}

type Auction @entity {
  "The Whale's ERC721 token id"
  id: ID!

  "The Whale"
  whale: Whale!

  "The current highest bid amount"
  amount: BigInt!

  "The time that the auction started"
  startTime: BigInt!

  "The time that the auction is scheduled to end"
  endTime: BigInt!

  "The account with the current highest bid"
  bidder: Account

  "Whether or not the auction has been settled"
  settled: Boolean!

  "The auction bids"
  bids: [Bid!]! @derivedFrom(field: "auction")
}

type Account @entity {
  "An Account is any address that holds any amount of Whales, the id used is the blockchain address."
  id: ID!

  "Whale balance of this address expressed in the smallest unit of the Whales ERC721 Token"
  tokenBalanceRaw: BigInt!

  "Whale balance of this address expressed as a BigInt normalized value for the Whales ERC721 Token"
  tokenBalance: BigInt!

  "Total amount of Whales ever held by this address expressed in the smallest unit of the Whales ERC721 Token"
  totalTokensHeldRaw: BigInt!

  "Total amount of Whales ever held by this address expressed as a BigInt normalized value for the Whales ERC721 Token"
  totalTokensHeld: BigInt!

  "The Whales owned by this account"
  whales: [Whale!]!
}
